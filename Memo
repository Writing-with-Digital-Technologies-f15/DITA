To: Chris Lindgren
From: Lucy Bixby
Subject: DITA topic model design rationale
Date: December 23, 2015

For my DITA project, I developed topics around the practice of centering items in CSS and HTML. First, I wrote three task topics: how to center text, how to center images, and how to center divs. As we talked about in class, there are a lot of different things that people might want to center--one that I ran across as I was working on this project was centering a div within another div. But it made the most sense to start small with text, something that is centered often and is what a lot of designers starting out will be working with; and then to build up to images and divs. Starting with a narrow focus and expanding to a larger one would help a learning audience understand more about how centering works in general (and therefore they might be able to figure out how to center other, more obscure things on their own) than if I had chosen less common, more specific topics (like centering a div within a div). 

I planned on these task topics being of the choice collection type. That way, someone looking at the topics could choose which one they wanted based on their user goals. I attempted to implement the collection type in the ditamap file, but every time I tried I got an error message for the pdf and html5 output. There must have been something inconsistent in the way the DITA Best Practices book showed to create a collection type and the way my computer was reading the code. But the intent was for the tasks to be presented as options to a viewer. This would allow viewers to focus their attention on the information they need instead of having to read all the tasks to figure out which one would help them toward their goals. 

The task topics would then be connected to two concept topics and a reference topic. My first concept  topic is pretty short and is about how centering used to be done in HTML. I developed this concept topic because I feel that understanding the history behind center offers greater clarity about how it is used in CSS and why it is a part of CSS. Additionally, some browsers and some types of writing, like emails, still support inline design tags. I thought that might be a helpful task topic, but ultimately it did not fit in well with the other two CSS-related tasks. So I changed that idea into a more informative concept topic, where readers can learn about how HTML and CSS are connected when it comes to centering if they are interested. My second concept topic is about the distinctions between elements, attributes, and values for attributes. I felt this was necessary because I used those terms a lot in my task topics, and someone less familiar with coding might be unsure of all the differences. By creating this concept topic, I provide clarity about frequently used terms to readers in a way that is convenient for them to access (rather than having to move to a different window to Google it or something). Finally, my reference topic is a list of the ways that center was/can be used in, first, HTML, and second, in CSS. After my “history” concept topic, I thought it was important to distinguish the differences between how centering works in HTML versus in CSS. I also wanted the chance to highlight some uses for the center tag that I was not able to discuss in my task topics. I think that this reference topic could work well as reusable content, as it could easily link to other new task topics about more in-depth centering processes. 

When writing my topics, I began with the title, which I tried to make as straightforward as possible (so I could remember it better), and then the short description. For my task topics, I wanted to use the short description to describe in the most basic way how the task is done. For example, in the centering divs topic’s short description, I state that this procedure can be completed using CSS margin settings. I then explain why this task is useful and how it might help meet a user’s goals. I explain what you can do with the procedure, such as center a div block rather than the words inside the div, or emphasize a portion of text. The reader will easily be able to tell from the short description what it will require to complete the task and whether this task will help him or her to fulfill their web page and design goals. 

In the body of my task topics, I started with a prerequisite as demonstrated in DITA Best Practices. I had three reasons for doing this: first, because I thought it was a good way to let readers know what they will need to have already done before they can start following my instructions on centering. It is right at the beginning of the task where they will see it, but it doesn’t have to function as its own task. Like following a recipe--you always look at the ingredients first. The ingredients section doesn’t explain how to go buy the items at the store; that you have them already is a prerequisite. I also thought the prereq section could be used to set the knowledge level for completing the tasks. I assumed that my audience was a group that knew little enough about HTML and CSS that they would have to look up how to do things like center text. On the other hand, it would take many task topics to explain all about writing in CSS, so I also assumed that they knew, generally, how to code, with a little guidance, or at least had access to a simple code framework and basic knowledge of the parts that make up HTML and CSS so as to work within the framework. I think that I also imagined my audience as designers in one form or another. In the early days of center, many W3C programmers were not concerned with design. Someone playing around with centering different things in CSS likely has some kind of visual goal in mind, and is therefore working with design. The last reason I chose to use a prerequisite was because I thought it would be a good opportunity to have some reusable content. I could insert the same prereq at the beginning of each task topic, because they were similar enough that it was relevant to all three of them. 

Throughout my task topics, I used many examples so that viewers would easily be able to tell what they would need to use for code. Sometimes the DITA Best Practices book did not seem very clear, and I wanted to avoid that in my own writing. I added a few images as well when I felt a visual representation might be clearer than a textual example. I also used conrefs in several other places, at times when I felt that it would be beneficial to include the same note or bit of information in multiple task topics. Most of the original reusable content items can be found in the text task topic. 

In my concept and reference topics, I utilize xref links to connect them with the task topics. I think the inline links look better than a more intrusive type of link, and they help make the entire topic model cohesive. 

In the end, I tried a lot of things to get the topics to output into pdf and html5. The concept and reference topics worked after a few tries, but the task topics keep receiving an error message. I think that it has something to do with the information in the head of the topics, but I don’t feel like I have enough knowledge to fix the problem.There were a few other smaller error messages that kept popping up too,  and I addressed them as best I could. 
